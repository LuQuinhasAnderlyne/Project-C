 // Valores formatados:
   
    Quando precisamos imprimir dados na tela utilizamos a funçao "printf" (imprima formatado.)
   
     Essa funcao possui tipos de saida, ou seja, podemos especificar o tipo de text que queremos imprimir.
    
     printf("%tipo_de_saida") , valor a ser impresso = variavel);
    
     se precisarmos imprimir mais de um valor  formartado nos podemos encadear as expressoes usando ,
    
    por exemplo: printf("%tipo1 %tipo2" , var1, var2);
   
   Exemplo pratico:

  int num = 11;
  printf( "%i\n" , num ); // %i = tipo inteiro , num = nome da variavel declarada.
    
  Um exemplo de valor com ponto flutuante:
  
  float f = 2.2;
  printf( "%f" , f );
  
  Agora, como imprimir os 4 tipos de dados (void nao conta pois e vazio.):
  
   integer (inteiro): usamos %i OU %d.
   float Ou double: usamos %f.
   char: usamos %c.
   string (cadeia de texto): %s.
  
  Alem desses ainda temos outros tipos:
  
   %u: auando queremos escrever um numero inteiro sem o sinal, ou seja, imprimir apenas o modulo.
   %p: quando precisamos imprimir o endereco de memoria.
   %e ou %E: utilizamos para imprimir numeros com notaçao cientifica.
   %%: para imprimir apenas um sinal de porcentagem.
  
  Agora para finalizar, vamos criar um programinha utilizando alguns desses indentifcadores de tipo:
  
  int x = 10;
  printf("%i\n" , x );
  
  float ff = 4.12;
  printf("%f\n" , ff );
  
  printf(" %i - %f \n" , x, ff);
